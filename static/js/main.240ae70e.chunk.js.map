{"version":3,"sources":["components/Button.tsx","App.tsx","index.tsx"],"names":["Button","clicked","name","type","className","onClick","goodsFromServer","App","useState","state","setState","goods","setGoods","bool","reverse","sort","a","b","localeCompare","length","onChange","event","newGoods","target","value","map","good","i","ReactDOM","render","document","getElementById"],"mappings":"iOAQaA,EAA8B,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KACrD,OACE,wBAAQC,KAAK,SAASC,UAAU,oCAAoCC,QAASJ,EAA7E,SAAuFC,KCLrFI,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA8DaC,EA3DO,WACpB,MAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAASF,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KA8BA,OACE,sBAAKR,UAAU,cAAf,UACE,uCACA,cAAC,EAAD,CAAQH,QA/BI,WACdS,GAAS,SAACG,GAAD,OAAWA,MA8BQX,KAAK,UAC/B,cAAC,EAAD,CAAQD,QA5BM,WAChBW,GAAS,kBAAM,YAAID,GAAOG,cA2BIZ,KAAK,YACjC,cAAC,EAAD,CAAQD,QAzBS,WACnBW,GAAS,kBAAM,YAAID,GAAOI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,UAwBxBf,KAAK,wBACpC,cAAC,EAAD,CAAQD,QAlBK,WACfW,GAAS,2BAAUN,OAiBUJ,KAAK,UAChC,cAAC,EAAD,CAAQD,QAvBS,WACnBW,GAAS,kBAAM,YAAID,GAAOI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,cAsBrBjB,KAAK,mBACpC,yBAAQA,KAAK,SAASkB,SAhBL,SAACC,GACpB,IAAMC,EAAQ,UAAOhB,GAErBgB,EAASH,QAAUE,EAAME,OAAOC,MAEhCZ,EAASU,IAWuClB,UAAU,kBAAxD,UACE,wBAAQoB,MAAM,GAAd,8BAGClB,EAAgBmB,KAAI,SAACC,EAAMC,GAAP,OACnB,wBAAQH,MAAOG,EAAI,EAAnB,SACGA,EAAI,GADoBD,SAK/B,6BACGjB,GAASE,EAAMc,KAAI,SAACC,GAAD,OAClB,6BAAgBA,GAAPA,YCnEnBE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.240ae70e.chunk.js","sourcesContent":["import React from 'react';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\ntype typeOfBtn = {\n  clicked: () => void,\n  name: string,\n};\n\nexport const Button: React.FC<typeOfBtn> = ({ clicked, name }) => {\n  return (\n    <button type=\"button\" className=\"waves-effect waves-light btn-flat\" onClick={clicked}>{name}</button>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport { Button } from './components/Button';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [state, setState] = useState(false);\n  const [goods, setGoods] = useState(goodsFromServer);\n\n  const togling = () => {\n    setState((bool) => !bool);\n  };\n\n  const reversing = () => {\n    setGoods(() => [...goods].reverse());\n  };\n\n  const sortAlphabet = () => {\n    setGoods(() => [...goods].sort((a, b) => a.localeCompare(b)));\n  };\n\n  const sortByLength = () => {\n    setGoods(() => [...goods].sort((a, b) => a.length - b.length));\n  };\n\n  const reseting = () => {\n    setGoods(() => [...goodsFromServer]);\n  };\n\n  const chooseLength = (event: React.ChangeEvent<HTMLSelectElement>): void => {\n    const newGoods = [...goodsFromServer];\n\n    newGoods.length = +event.target.value;\n\n    setGoods(newGoods);\n  };\n\n  return (\n    <div className=\"App buttons\">\n      <h1>Goods</h1>\n      <Button clicked={togling} name=\"START\" />\n      <Button clicked={reversing} name=\"Reverse\" />\n      <Button clicked={sortAlphabet} name=\"Sort alphabetically\" />\n      <Button clicked={reseting} name=\"Reset\" />\n      <Button clicked={sortByLength} name=\"Sort by length\" />\n      <select name=\"length\" onChange={chooseLength} className=\"browser-default\">\n        <option value=\"\">\n          Set goods length\n        </option>\n        {goodsFromServer.map((good, i) => (\n          <option value={i + 1} key={good}>\n            {i + 1}\n          </option>\n        ))}\n      </select>\n      <ul>\n        {state && goods.map((good) => (\n          <li key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}